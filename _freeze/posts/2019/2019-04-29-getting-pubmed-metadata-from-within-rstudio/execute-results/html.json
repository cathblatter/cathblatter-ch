{
  "hash": "3a2c15713dd5ac6cd09569ec5fad3e50",
  "result": {
    "markdown": "---\ntitle: Getting PubMed metadata with RISmed directly into RStudio \nauthor: Catherine Blatter\ndate: '2019-04-29'\ncategories: [RISmed]\nimage: pubmed_yearcount.png\n---\n\n::: {.cell}\n\n:::\n\n\n\n## What is this post about?\n\n- For my master's thesis (stay tuned 😎) I came at \na point where I was interested in having a closer look at publication meta data (e.g. publications per year)  \n\n- PubMed usually does provide this service when you execute your search, for some reason it failed\nfor my query\n\n- Being taught basic statistics I was determined to find a way to create\nthe image myself... and came across the amazing RISmed-📦\n\n➡️ This blog post highlights how I used the RISmed package\nand gives short code examples \n\n\n## Introduction - what were the problems I faced?\n\nThe topic of my master's thesis - *unfinished / missed / rationed nursing care* - is an \nimportant topic in health services research with growing numbers of publications over \nthe last years. Altough I did not have to use R extensively during my thesis, in one \nspecific case I greatly profited from it: \n\nUsually, PubMed provides a small graphical display of the yearly publication\ncount on each query as shown in the image below: \n\n![PubMed year count](pubmed_yearcount.png)\n\nFor some reason it failed for my exact search query. This was especially bad \nbecause I had to make a somehow valid statement that the publication numbers were \nincreasing over the last years. \nIf I only could get all meta data (i.e. years) from my query (~900) into a spreadsheet...[^1]\n\n[^1]: Actually, PubMed does provide this service in a user friendly way: Execute your \nsearch query, choose the results you want, then go to *Send to* -> *File* and you \nget a .csv-file.  \nBut hey, who does it this way when you can extract it with an\nR package?\n\nAt some point I realized that the PubMed database should be accessible and I was sure \nthat R has a solution to it - that's how I found the [RISmed-package](https://cran.r-project.org/web/packages/RISmed/RISmed.pdf).\n\n## RISmed package\n\nIn short: the RISmed package provides functions to extract bibliographic information from  \nthe NCBI databases. In other words: you can extract the information from PubMed through \nR code - exactly what I needed! \n\n### How to use RISmed?\n\nFirst you need to install `install.packages(\"RISmed\")` or load the package: \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load necessary packages\nlibrary(tidyverse)\nlibrary(RISmed)\n```\n:::\n\n\nThen you specify the search_topic and search_query: \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# build the search topic\nsearch_topic <- 'missed care [TI] OR implicit rationing [TI] OR unfinished care [TI]'\n\n# the EUtilsSummary()-function gets information on your search results\n# (maximum results set as 1000, years between 1980 and 2019)\nsearch_query <- EUtilsSummary(search_topic, retmax=1000, mindate=1980,maxdate=2019)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in any(is.na(WhichArgs)) || sapply(WhichArgs, length) > 1: 'length(x) =\n3 > 1' in coercion to 'logical(1)'\n```\n:::\n:::\n\n\n`summary()` and `QueryId` get you quick overview of your results:  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Printing the summary displays the actual results that are available\nsummary(search_query)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nQuery:\n(\"missed care\"[Title] OR \"implicit rationing\"[Title] OR \"unfinished care\"[Title]) AND 1980/01/01:2019/12/31[Date - Entry] \n\nResult count:  66\n```\n:::\n\n```{.r .cell-code}\n# see the PMIIDs of our returned query\nQueryId(search_query)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"31883182\" \"31850645\" \"31845542\" \"31773131\" \"31680364\" \"31596988\"\n [7] \"31583822\" \"31529752\" \"31334567\" \"31305955\" \"30937945\" \"30866129\"\n[13] \"30686577\" \"30681485\" \"30589706\" \"30475323\" \"30303195\" \"30303194\"\n[19] \"30303193\" \"30145041\" \"30095046\" \"29791753\" \"29655017\" \"29569380\"\n[25] \"29554590\" \"29471742\" \"29281908\" \"28978300\" \"28971888\" \"28960457\"\n[31] \"28844649\" \"28599196\" \"27556651\" \"27492884\" \"27322941\" \"27292861\"\n[37] \"27234155\" \"29718634\" \"26947419\" \"26259338\" \"26032730\" \"25794946\"\n[43] \"25563066\" \"25430513\" \"24681453\" \"24681452\" \"24481345\" \"24397252\"\n[49] \"24248553\" \"23991529\" \"23334645\" \"23084600\" \"22674763\" \"20661063\"\n[55] \"19590471\" \"18055900\" \"16323493\" \"11467274\" \"10862990\" \"9694173\" \n[61] \"10173241\" \"8611380\"  \"7549650\"  \"7549649\"  \"7795458\"  \"8332926\" \n```\n:::\n:::\n\n\nIf you think your query gets you a reasonable number of results you can then \nfurther information on your records (i.e. dowloading the information): \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# get the actual data from PubMed and store them in an object called records\nrecords <- EUtilsGet(search_query, type = \"efetch\", db = \"pubmed\")\n\n# check what kind of object \"records\" is\nclass(records)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Medline\"\nattr(,\"package\")\n[1] \"RISmed\"\n```\n:::\n:::\n\n\nFor creating your final dataframe to analyse the data, you need to extract information \nas requested. You can choose either dataframe or list to store the results. Careful: \nIf you extract `Author()` you need to choose list, otherwise the variable is dropped.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# store it in either list or dataframe (Author() returns a list, therefore \n# list chosen here)\npubmed_data_list <- list('Title' = ArticleTitle(records), \n                         'Authors' = Author(records), \n                         'Year' = YearPubmed(records), \n                         'Journal' = Title(records),\n                         'PublicationType' = PublicationType(records),\n                         'Language' = Language(records))\n\n# version without Authors for dataframe\npubmed_data <- data.frame('Title' = ArticleTitle(records),\n                    'Year' = YearPubmed(records), \n                    'Journal' = Title(records),\n                    'Language' = Language(records))\n```\n:::\n\n\nFinally, I could visually explore the year count: \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# plot the yearcount\nggplot(pubmed_data, aes(x = factor(Year))) +\n  geom_bar() +\n  scale_y_discrete() +\n  labs(x = \"Year\",\n       y = \"No. of publications\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](2019-04-29-getting-pubmed-metadata-from-within-rstudio_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n## How could my thesis profit from the RISmed package? \n\nThe figure I created[^2] helped me visualize meta information on the publications: \nI could clearly see that the topic *unfinished nursing care* has been mentioned \nwith increasing tendency in publications. This gave me valid data for accepting my assumption.  \n\n[^2]: (not the figure above, as the sample string I used in this post \nwas not as comprehensive as the full search string used in my thesis)\n\nDue to the nature of my thesis, I (sadly) didn't have to use the exact numbers. Yet, I still \nlearned two useful things 💡:  \n\n1) Using bibliographic information to inform your research may be helpful and should \nnot be forgotten.  \n\n2) I felt like I reached a whole new level of R's numerous capabilities: Using an \nR package to connect to a web-database should not be the end of my discoveries 😃\n\n\n*Notes on this post*:  \n\n- Be careful with the search query - there can be differences in using different codes, see here: \nhttps://stackoverflow.com/questions/32994991/r-package-rismed-different-results-using-the-eutilsget-or-summary-function\n\n- Dowloading information from PubMed (`EUtilsGet()`) can take a while\n\n- I had some trouble with long search terms (no further explanation found)  \n\n\n\n#### Other resources I used\n\n- https://datascienceplus.com/search-pubmed-with-rismed/  \n- https://www.r-bloggers.com/how-to-search-pubmed-with-rismed-package-in-r/  \n- https://www.rdocumentation.org/packages/RISmed/versions/2.1.4 ",
    "supporting": [
      "2019-04-29-getting-pubmed-metadata-from-within-rstudio_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}